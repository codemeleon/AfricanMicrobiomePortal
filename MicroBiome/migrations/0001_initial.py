# Generated by Django 2.2.7 on 2021-03-09 11:05

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amplicon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amplicon', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['amplicon'],
            },
        ),
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assay', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['assay'],
            },
        ),
        migrations.CreateModel(
            name='BodySite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bodysite', models.CharField(default=None, max_length=400, null=True)),
            ],
            options={
                'ordering': ['bodysite'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.CharField(max_length=100)),
                ('doid', models.IntegerField(default=None, null=True)),
            ],
            options={
                'ordering': ['disease'],
            },
        ),
        migrations.CreateModel(
            name='LocEthDiet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('urbanization', models.CharField(max_length=100)),
                ('cityvillage', models.CharField(max_length=100)),
                ('ethnicity', models.CharField(max_length=100)),
                ('diets', models.CharField(max_length=100)),
                ('lon', models.FloatField(null=True)),
                ('lat', models.FloatField(null=True)),
            ],
            options={
                'ordering': ['country'],
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(default=None, max_length=100, null=True)),
            ],
            options={
                'ordering': ['platform'],
            },
        ),
        migrations.CreateModel(
            name='Pubmed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pubid', models.IntegerField(default=None)),
                ('title', models.CharField(default='No Title', max_length=500)),
            ],
            options={
                'ordering': ['pubid'],
            },
        ),
        migrations.CreateModel(
            name='TestProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repoid', models.CharField(max_length=100)),
                ('repo', models.CharField(default='ncbi', max_length=20)),
                ('title', models.CharField(default='No Title', max_length=500)),
                ('sample_size', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['repoid'],
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampid', models.CharField(max_length=100)),
                ('avspotlen', models.IntegerField(default=None, null=True)),
                ('coldate', models.CharField(default=None, max_length=100, null=True)),
                ('amplicon', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.Amplicon')),
                ('assay', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.Assay')),
                ('bodysite', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.BodySite')),
                ('disease', models.ManyToManyField(to='MicroBiome.Disease')),
                ('locetdiet', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.LocEthDiet')),
                ('platform', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.Platform')),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='MicroBiome.TestProject')),
            ],
            options={
                'ordering': ['sampid'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_id', models.CharField(max_length=20)),
                ('study_title', models.CharField(max_length=410)),
                ('study_link', models.CharField(max_length=150)),
                ('assay_type', models.CharField(max_length=20)),
                ('technology', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=60)),
                ('disease', models.CharField(max_length=100)),
                ('study_design', models.CharField(max_length=80)),
                ('body_site', models.CharField(max_length=50)),
                ('platform', models.CharField(max_length=40)),
                ('participant_features', models.CharField(max_length=280)),
                ('library_layout', models.CharField(max_length=10)),
                ('lon_lat', models.CharField(max_length=50)),
                ('sample_type', models.CharField(max_length=30)),
                ('collection_date', models.CharField(max_length=30)),
                ('ethnicity', models.CharField(max_length=110)),
                ('urbanzation', models.CharField(max_length=20)),
                ('region', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=60)),
                ('target_amplicon', models.CharField(max_length=50)),
                ('diet', models.CharField(max_length=180)),
                ('sample_number', models.PositiveSmallIntegerField()),
                ('tags', taggit.managers.TaggableManager(help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
